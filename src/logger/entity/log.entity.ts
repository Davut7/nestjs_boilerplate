import { ApiProperty } from '@nestjs/swagger';
import { IsOptional } from 'class-validator';
import {
  Column,
  CreateDateColumn,
  Entity,
  PrimaryGeneratedColumn,
} from 'typeorm';

@Entity({ name: 'logs' })
export class LogsEntity {
  @ApiProperty({
    title: 'Id',
    description: 'Generated by database',
    example: 'e9e2ec91-eeaf-43fc-8286-fc620e42f49a',
    nullable: true,
  })
  @PrimaryGeneratedColumn()
  public id: number;

  @ApiProperty({
    title: 'Host',
    description: 'Host from request',
    example: '192.168.128.11',
    nullable: true,
  })
  @IsOptional()
  @Column({ nullable: true })
  public host: string;

  @ApiProperty({
    title: 'Url',
    description: 'Url from request',
    example: '/api/logs/log',
    nullable: true,
  })
  @IsOptional()
  @Column({ nullable: true })
  public url: string;

  @ApiProperty({
    title: 'HTTP status code',
    description: 'Http code from requested method',
    example: '200, 201',
    nullable: true,
  })
  @IsOptional()
  @Column({ nullable: true })
  public statusCode: number;

  @ApiProperty({
    title: 'HTTP method',
    description: 'Http method from requested method',
    example: 'GET, POST, DELETE, PATCH',
    nullable: true,
  })
  @IsOptional()
  @Column({ nullable: true })
  public method: string;

  @ApiProperty({
    title: 'User',
    description: 'User from request if authorized',
    example: 'user = { firstName: David,  role:admin  }',
    nullable: true,
  })
  @IsOptional()
  @Column({ nullable: true })
  public user: string;

  @ApiProperty({
    title: 'Context',
    description: 'Context from requested service',
    example: 'CategoryService, userService, NestFactory',
    nullable: true,
  })
  @IsOptional()
  @Column()
  public context: string;

  @ApiProperty({
    title: 'Message',
    description: 'Message from logged log',
    example: 'Category created successfully',
    nullable: true,
  })
  @IsOptional()
  @Column()
  public message: string;

  @ApiProperty({
    title: 'Log level',
    description: 'Log level',
    example: '[log, verbose, warn, debug, error]',
    nullable: true,
  })
  @IsOptional()
  @Column()
  public level: string;

  @ApiProperty({
    title: 'Log created time',
    nullable: true,
    description: 'Generated by database timestamp while log created',
    example: '2023-12-28 21:14:24.304 +0300',
  })
  @CreateDateColumn({ type: 'timestamptz' })
  public createdAt: string;

  @ApiProperty({
    title: 'Response time',
    nullable: true,
    description: 'Request response time',
    example: '355ms',
  })
  @Column({ nullable: true })
  public time: string;
}
